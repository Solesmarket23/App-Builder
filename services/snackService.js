/**
 * Snack Service - Creates Expo Snack previews for generated code
 * Uses Snack URL parameters to embed code directly without API
 */

/**
 * Creates a Snack URL with embedded code for live preview
 * @param {string} code - Generated React Native code
 * @param {string} name - Name for the Snack
 * @returns {Promise<{url: string, embedUrl: string}>} - Snack URLs
 */
export async function createSnack(code, name = 'AI Generated App') {
  try {
    // Encode the code for URL
    const encodedCode = encodeURIComponent(code);
    const encodedName = encodeURIComponent(name);
    
    // Create Snack URL with code parameter
    // Format: https://snack.expo.dev/?code=...&name=...
    const baseUrl = 'https://snack.expo.dev';
    const params = new URLSearchParams({
      platform: 'ios',
      name: encodedName,
      description: 'Generated by AppBuilder AI',
      dependencies: '@expo/vector-icons,expo-linear-gradient,react-native-safe-area-context',
    });
    
    // Create the embed URL with code
    const snackUrl = `${baseUrl}?${params.toString()}`;
    const embedUrl = `${baseUrl}/embedded?${params.toString()}&code=${encodedCode}`;
    
    console.log('âœ… Snack URL created (no API needed)');
    
    return {
      url: snackUrl,
      embedUrl: embedUrl,
      id: 'embedded',
    };
  } catch (error) {
    console.error('Error creating Snack URL:', error);
    throw error;
  }
}

/**
 * Gets the embed URL for a Snack (optimized for WebView)
 * @param {string} snackId - Snack ID
 * @param {Object} options - Embed options
 * @returns {string} - Embed URL
 */
export function getEmbedUrl(snackId, options = {}) {
  const {
    platform = 'ios',
    preview = true,
    theme = 'dark',
  } = options;

  const params = new URLSearchParams({
    platform,
    preview: preview ? 'true' : 'false',
    theme,
  });

  return `https://snack.expo.dev/embedded/@snack/${snackId}?${params.toString()}`;
}


/**
 * Gets the embed URL for a Snack (optimized for WebView)
 * @param {string} snackId - Snack ID
 * @param {Object} options - Embed options
 * @returns {string} - Embed URL
 */
export function getEmbedUrl(snackId, options = {}) {
  const {
    platform = 'ios',
    preview = true,
    theme = 'dark',
  } = options;

  const params = new URLSearchParams({
    platform,
    preview: preview ? 'true' : 'false',
    theme,
  });

  return `https://snack.expo.dev/embedded/${snackId}?${params.toString()}`;
}

